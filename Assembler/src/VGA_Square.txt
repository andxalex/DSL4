lda 0x00 //Initialise reg A with zero
ldb 0x00 //Initialise reg B with zero
sta 0xB1
sta 0x02
stb 0x03
sta 0xB0 //A for X (Write first 00)
stb 0xB1 //B for Y
ldb 0x03 //LOOP (12)
sta 0x02 //Store adress of A
stb 0x03 //Store adress of B
sta 0xB0 //A for X
stb 0xB1 //B for Y
ldb 0x06 //124
blt 0X2E  //A smaller than b (BRANCH1)
ldb 0x07
bgt 0X2E   //(BRANCH1)
lda 0x01
sta 0xB2  //colour square with 1
lda 0x05
sta 0xB1
lda 0x00
sta 0xB1
ldb 0x00
beq 0X3A //(EXIT1)
lda 0x00 //BRANCH1
sta 0xB2
lda 0x05
sta 0xB1
lda 0x00
sta 0xB1
lda 0x02 //EXIT1
ldb 0x03
alu app //Increase value of A
ldb 0x00 //B gets 256 to compare
bgt 0x0C //LOOP
ldb 0x03 //get old adress of b
blu bpp  //increase b
stb 0x03 //store b
lda 0x00 //load a with 127
bgt 0x51 //END
lda 0x00
gto 0x0C //LOOP
gti //END (3C)